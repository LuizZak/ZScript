//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/Luiz Fernando/Documents/Visual Studio 2013/Engines/ZScript/ZScript\ZScript.g4 by ANTLR 4.5

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IZScriptListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5")]
[System.CLSCompliant(false)]
public partial class ZScriptBaseListener : IZScriptListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] ZScriptParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] ZScriptParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.scriptBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterScriptBody([NotNull] ZScriptParser.ScriptBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.scriptBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitScriptBody([NotNull] ZScriptParser.ScriptBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.objectDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectDefinition([NotNull] ZScriptParser.ObjectDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.objectDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectDefinition([NotNull] ZScriptParser.ObjectDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.objectInherit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectInherit([NotNull] ZScriptParser.ObjectInheritContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.objectInherit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectInherit([NotNull] ZScriptParser.ObjectInheritContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.objectName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectName([NotNull] ZScriptParser.ObjectNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.objectName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectName([NotNull] ZScriptParser.ObjectNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.objectBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectBody([NotNull] ZScriptParser.ObjectBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.objectBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectBody([NotNull] ZScriptParser.ObjectBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.objectField"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectField([NotNull] ZScriptParser.ObjectFieldContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.objectField"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectField([NotNull] ZScriptParser.ObjectFieldContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.objectFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectFunction([NotNull] ZScriptParser.ObjectFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.objectFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectFunction([NotNull] ZScriptParser.ObjectFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.globalVariable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGlobalVariable([NotNull] ZScriptParser.GlobalVariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.globalVariable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGlobalVariable([NotNull] ZScriptParser.GlobalVariableContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.sequenceBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSequenceBlock([NotNull] ZScriptParser.SequenceBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.sequenceBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSequenceBlock([NotNull] ZScriptParser.SequenceBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.sequenceName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSequenceName([NotNull] ZScriptParser.SequenceNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.sequenceName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSequenceName([NotNull] ZScriptParser.SequenceNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.sequenceBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSequenceBody([NotNull] ZScriptParser.SequenceBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.sequenceBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSequenceBody([NotNull] ZScriptParser.SequenceBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.sequenceFrame"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSequenceFrame([NotNull] ZScriptParser.SequenceFrameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.sequenceFrame"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSequenceFrame([NotNull] ZScriptParser.SequenceFrameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.sequenceFrameChange"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSequenceFrameChange([NotNull] ZScriptParser.SequenceFrameChangeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.sequenceFrameChange"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSequenceFrameChange([NotNull] ZScriptParser.SequenceFrameChangeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.frameRange"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFrameRange([NotNull] ZScriptParser.FrameRangeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.frameRange"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFrameRange([NotNull] ZScriptParser.FrameRangeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.frameRangeElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFrameRangeElement([NotNull] ZScriptParser.FrameRangeElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.frameRangeElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFrameRangeElement([NotNull] ZScriptParser.FrameRangeElementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.frameNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFrameNumber([NotNull] ZScriptParser.FrameNumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.frameNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFrameNumber([NotNull] ZScriptParser.FrameNumberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.functionDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDefinition([NotNull] ZScriptParser.FunctionDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.functionDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDefinition([NotNull] ZScriptParser.FunctionDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.exportDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExportDefinition([NotNull] ZScriptParser.ExportDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.exportDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExportDefinition([NotNull] ZScriptParser.ExportDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.functionName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionName([NotNull] ZScriptParser.FunctionNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.functionName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionName([NotNull] ZScriptParser.FunctionNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.functionBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionBody([NotNull] ZScriptParser.FunctionBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.functionBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionBody([NotNull] ZScriptParser.FunctionBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.functionArguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionArguments([NotNull] ZScriptParser.FunctionArgumentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.functionArguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionArguments([NotNull] ZScriptParser.FunctionArgumentsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.argumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgumentList([NotNull] ZScriptParser.ArgumentListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.argumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgumentList([NotNull] ZScriptParser.ArgumentListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.returnType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnType([NotNull] ZScriptParser.ReturnTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.returnType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnType([NotNull] ZScriptParser.ReturnTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.functionArg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionArg([NotNull] ZScriptParser.FunctionArgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.functionArg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionArg([NotNull] ZScriptParser.FunctionArgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.argumentName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgumentName([NotNull] ZScriptParser.ArgumentNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.argumentName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgumentName([NotNull] ZScriptParser.ArgumentNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.typeAlias"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeAlias([NotNull] ZScriptParser.TypeAliasContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.typeAlias"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeAlias([NotNull] ZScriptParser.TypeAliasContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.typeAliasBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeAliasBody([NotNull] ZScriptParser.TypeAliasBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.typeAliasBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeAliasBody([NotNull] ZScriptParser.TypeAliasBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.typeAliasVariable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeAliasVariable([NotNull] ZScriptParser.TypeAliasVariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.typeAliasVariable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeAliasVariable([NotNull] ZScriptParser.TypeAliasVariableContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.typeAliasFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeAliasFunction([NotNull] ZScriptParser.TypeAliasFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.typeAliasFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeAliasFunction([NotNull] ZScriptParser.TypeAliasFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.typeAliasName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeAliasName([NotNull] ZScriptParser.TypeAliasNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.typeAliasName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeAliasName([NotNull] ZScriptParser.TypeAliasNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.typeAliasInherit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeAliasInherit([NotNull] ZScriptParser.TypeAliasInheritContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.typeAliasInherit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeAliasInherit([NotNull] ZScriptParser.TypeAliasInheritContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] ZScriptParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] ZScriptParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.blockStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlockStatement([NotNull] ZScriptParser.BlockStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.blockStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlockStatement([NotNull] ZScriptParser.BlockStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] ZScriptParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] ZScriptParser.IfStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.elseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseStatement([NotNull] ZScriptParser.ElseStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.elseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseStatement([NotNull] ZScriptParser.ElseStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.switchStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchStatement([NotNull] ZScriptParser.SwitchStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.switchStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchStatement([NotNull] ZScriptParser.SwitchStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.switchBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchBlock([NotNull] ZScriptParser.SwitchBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.switchBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchBlock([NotNull] ZScriptParser.SwitchBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.caseBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseBlock([NotNull] ZScriptParser.CaseBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.caseBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseBlock([NotNull] ZScriptParser.CaseBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.defaultBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefaultBlock([NotNull] ZScriptParser.DefaultBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.defaultBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefaultBlock([NotNull] ZScriptParser.DefaultBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStatement([NotNull] ZScriptParser.WhileStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.whileStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStatement([NotNull] ZScriptParser.WhileStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.forStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForStatement([NotNull] ZScriptParser.ForStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.forStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForStatement([NotNull] ZScriptParser.ForStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.forInit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForInit([NotNull] ZScriptParser.ForInitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.forInit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForInit([NotNull] ZScriptParser.ForInitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.forCondition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForCondition([NotNull] ZScriptParser.ForConditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.forCondition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForCondition([NotNull] ZScriptParser.ForConditionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.forIncrement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForIncrement([NotNull] ZScriptParser.ForIncrementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.forIncrement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForIncrement([NotNull] ZScriptParser.ForIncrementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStatement([NotNull] ZScriptParser.ReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStatement([NotNull] ZScriptParser.ReturnStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.breakStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBreakStatement([NotNull] ZScriptParser.BreakStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.breakStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBreakStatement([NotNull] ZScriptParser.BreakStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.continueStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContinueStatement([NotNull] ZScriptParser.ContinueStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.continueStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContinueStatement([NotNull] ZScriptParser.ContinueStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.valueDeclareStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValueDeclareStatement([NotNull] ZScriptParser.ValueDeclareStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.valueDeclareStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValueDeclareStatement([NotNull] ZScriptParser.ValueDeclareStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.valueHolderDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValueHolderDecl([NotNull] ZScriptParser.ValueHolderDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.valueHolderDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValueHolderDecl([NotNull] ZScriptParser.ValueHolderDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.valueHolderName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValueHolderName([NotNull] ZScriptParser.ValueHolderNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.valueHolderName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValueHolderName([NotNull] ZScriptParser.ValueHolderNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] ZScriptParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] ZScriptParser.TypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.objectType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectType([NotNull] ZScriptParser.ObjectTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.objectType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectType([NotNull] ZScriptParser.ObjectTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeName([NotNull] ZScriptParser.TypeNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeName([NotNull] ZScriptParser.TypeNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.complexTypeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComplexTypeName([NotNull] ZScriptParser.ComplexTypeNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.complexTypeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComplexTypeName([NotNull] ZScriptParser.ComplexTypeNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.primitiveType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitiveType([NotNull] ZScriptParser.PrimitiveTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.primitiveType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitiveType([NotNull] ZScriptParser.PrimitiveTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.callableType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCallableType([NotNull] ZScriptParser.CallableTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.callableType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCallableType([NotNull] ZScriptParser.CallableTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.listType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterListType([NotNull] ZScriptParser.ListTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.listType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitListType([NotNull] ZScriptParser.ListTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.callableTypeList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCallableTypeList([NotNull] ZScriptParser.CallableTypeListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.callableTypeList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCallableTypeList([NotNull] ZScriptParser.CallableTypeListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.callableArgType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCallableArgType([NotNull] ZScriptParser.CallableArgTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.callableArgType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCallableArgType([NotNull] ZScriptParser.CallableArgTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] ZScriptParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] ZScriptParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.multOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultOp([NotNull] ZScriptParser.MultOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.multOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultOp([NotNull] ZScriptParser.MultOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.additionOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditionOp([NotNull] ZScriptParser.AdditionOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.additionOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditionOp([NotNull] ZScriptParser.AdditionOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.bitwiseAndOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitwiseAndOp([NotNull] ZScriptParser.BitwiseAndOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.bitwiseAndOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitwiseAndOp([NotNull] ZScriptParser.BitwiseAndOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.bitwiseXOrOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitwiseXOrOp([NotNull] ZScriptParser.BitwiseXOrOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.bitwiseXOrOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitwiseXOrOp([NotNull] ZScriptParser.BitwiseXOrOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.bitwiseOrOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitwiseOrOp([NotNull] ZScriptParser.BitwiseOrOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.bitwiseOrOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitwiseOrOp([NotNull] ZScriptParser.BitwiseOrOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.comparisionOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparisionOp([NotNull] ZScriptParser.ComparisionOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.comparisionOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparisionOp([NotNull] ZScriptParser.ComparisionOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.logicalAnd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalAnd([NotNull] ZScriptParser.LogicalAndContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.logicalAnd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalAnd([NotNull] ZScriptParser.LogicalAndContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.logicalOr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalOr([NotNull] ZScriptParser.LogicalOrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.logicalOr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalOr([NotNull] ZScriptParser.LogicalOrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.assignmentExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentExpression([NotNull] ZScriptParser.AssignmentExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.assignmentExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentExpression([NotNull] ZScriptParser.AssignmentExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.newExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNewExpression([NotNull] ZScriptParser.NewExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.newExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNewExpression([NotNull] ZScriptParser.NewExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.closureExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClosureExpression([NotNull] ZScriptParser.ClosureExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.closureExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClosureExpression([NotNull] ZScriptParser.ClosureExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.prefixOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrefixOperator([NotNull] ZScriptParser.PrefixOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.prefixOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrefixOperator([NotNull] ZScriptParser.PrefixOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.postfixOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPostfixOperator([NotNull] ZScriptParser.PostfixOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.postfixOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPostfixOperator([NotNull] ZScriptParser.PostfixOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.unaryOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryOperator([NotNull] ZScriptParser.UnaryOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.unaryOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryOperator([NotNull] ZScriptParser.UnaryOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.assignmentOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentOperator([NotNull] ZScriptParser.AssignmentOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.assignmentOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentOperator([NotNull] ZScriptParser.AssignmentOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.funcCallArguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncCallArguments([NotNull] ZScriptParser.FuncCallArgumentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.funcCallArguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncCallArguments([NotNull] ZScriptParser.FuncCallArgumentsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.expressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionList([NotNull] ZScriptParser.ExpressionListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.expressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionList([NotNull] ZScriptParser.ExpressionListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.leftValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLeftValue([NotNull] ZScriptParser.LeftValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.leftValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLeftValue([NotNull] ZScriptParser.LeftValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.leftValueAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLeftValueAccess([NotNull] ZScriptParser.LeftValueAccessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.leftValueAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLeftValueAccess([NotNull] ZScriptParser.LeftValueAccessContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCall([NotNull] ZScriptParser.FunctionCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCall([NotNull] ZScriptParser.FunctionCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.fieldAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFieldAccess([NotNull] ZScriptParser.FieldAccessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.fieldAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFieldAccess([NotNull] ZScriptParser.FieldAccessContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.arrayAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayAccess([NotNull] ZScriptParser.ArrayAccessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.arrayAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayAccess([NotNull] ZScriptParser.ArrayAccessContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.objectAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectAccess([NotNull] ZScriptParser.ObjectAccessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.objectAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectAccess([NotNull] ZScriptParser.ObjectAccessContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.valueAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValueAccess([NotNull] ZScriptParser.ValueAccessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.valueAccess"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValueAccess([NotNull] ZScriptParser.ValueAccessContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.memberName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemberName([NotNull] ZScriptParser.MemberNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.memberName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemberName([NotNull] ZScriptParser.MemberNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.arrayLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayLiteral([NotNull] ZScriptParser.ArrayLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.arrayLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayLiteral([NotNull] ZScriptParser.ArrayLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.objectLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectLiteral([NotNull] ZScriptParser.ObjectLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.objectLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectLiteral([NotNull] ZScriptParser.ObjectLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.stringLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringLiteral([NotNull] ZScriptParser.StringLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.stringLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringLiteral([NotNull] ZScriptParser.StringLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.objectEntryList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectEntryList([NotNull] ZScriptParser.ObjectEntryListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.objectEntryList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectEntryList([NotNull] ZScriptParser.ObjectEntryListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.objectEntryDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectEntryDefinition([NotNull] ZScriptParser.ObjectEntryDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.objectEntryDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectEntryDefinition([NotNull] ZScriptParser.ObjectEntryDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.entryName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEntryName([NotNull] ZScriptParser.EntryNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.entryName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEntryName([NotNull] ZScriptParser.EntryNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.compileConstant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompileConstant([NotNull] ZScriptParser.CompileConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.compileConstant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompileConstant([NotNull] ZScriptParser.CompileConstantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.constantAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantAtom([NotNull] ZScriptParser.ConstantAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.constantAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantAtom([NotNull] ZScriptParser.ConstantAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.numericAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumericAtom([NotNull] ZScriptParser.NumericAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.numericAtom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumericAtom([NotNull] ZScriptParser.NumericAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.hexadecimalNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHexadecimalNumber([NotNull] ZScriptParser.HexadecimalNumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.hexadecimalNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHexadecimalNumber([NotNull] ZScriptParser.HexadecimalNumberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.binaryNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBinaryNumber([NotNull] ZScriptParser.BinaryNumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.binaryNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBinaryNumber([NotNull] ZScriptParser.BinaryNumberContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
