//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/Luiz Fernando/Documents/Visual Studio 2013/Engines/ZScript/ZScript\ZScript.g4 by ANTLR 4.5

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="ZScriptParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5")]
[System.CLSCompliant(false)]
public interface IZScriptListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] ZScriptParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] ZScriptParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.scriptBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScriptBody([NotNull] ZScriptParser.ScriptBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.scriptBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScriptBody([NotNull] ZScriptParser.ScriptBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.classDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassDefinition([NotNull] ZScriptParser.ClassDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.classDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassDefinition([NotNull] ZScriptParser.ClassDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.classInherit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassInherit([NotNull] ZScriptParser.ClassInheritContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.classInherit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassInherit([NotNull] ZScriptParser.ClassInheritContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.className"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassName([NotNull] ZScriptParser.ClassNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.className"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassName([NotNull] ZScriptParser.ClassNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.classBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassBody([NotNull] ZScriptParser.ClassBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.classBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassBody([NotNull] ZScriptParser.ClassBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.classField"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassField([NotNull] ZScriptParser.ClassFieldContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.classField"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassField([NotNull] ZScriptParser.ClassFieldContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.classMethod"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassMethod([NotNull] ZScriptParser.ClassMethodContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.classMethod"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassMethod([NotNull] ZScriptParser.ClassMethodContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.globalVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGlobalVariable([NotNull] ZScriptParser.GlobalVariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.globalVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGlobalVariable([NotNull] ZScriptParser.GlobalVariableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.sequenceBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSequenceBlock([NotNull] ZScriptParser.SequenceBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.sequenceBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSequenceBlock([NotNull] ZScriptParser.SequenceBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.sequenceName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSequenceName([NotNull] ZScriptParser.SequenceNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.sequenceName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSequenceName([NotNull] ZScriptParser.SequenceNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.sequenceBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSequenceBody([NotNull] ZScriptParser.SequenceBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.sequenceBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSequenceBody([NotNull] ZScriptParser.SequenceBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.sequenceFrame"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSequenceFrame([NotNull] ZScriptParser.SequenceFrameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.sequenceFrame"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSequenceFrame([NotNull] ZScriptParser.SequenceFrameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.sequenceFrameChange"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSequenceFrameChange([NotNull] ZScriptParser.SequenceFrameChangeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.sequenceFrameChange"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSequenceFrameChange([NotNull] ZScriptParser.SequenceFrameChangeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.frameName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFrameName([NotNull] ZScriptParser.FrameNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.frameName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFrameName([NotNull] ZScriptParser.FrameNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.frameRange"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFrameRange([NotNull] ZScriptParser.FrameRangeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.frameRange"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFrameRange([NotNull] ZScriptParser.FrameRangeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.frameRangeElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFrameRangeElement([NotNull] ZScriptParser.FrameRangeElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.frameRangeElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFrameRangeElement([NotNull] ZScriptParser.FrameRangeElementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.frameNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFrameNumber([NotNull] ZScriptParser.FrameNumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.frameNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFrameNumber([NotNull] ZScriptParser.FrameNumberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.functionDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDefinition([NotNull] ZScriptParser.FunctionDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.functionDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDefinition([NotNull] ZScriptParser.FunctionDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.exportDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExportDefinition([NotNull] ZScriptParser.ExportDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.exportDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExportDefinition([NotNull] ZScriptParser.ExportDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.functionName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionName([NotNull] ZScriptParser.FunctionNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.functionName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionName([NotNull] ZScriptParser.FunctionNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.functionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionBody([NotNull] ZScriptParser.FunctionBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.functionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionBody([NotNull] ZScriptParser.FunctionBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.functionArguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionArguments([NotNull] ZScriptParser.FunctionArgumentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.functionArguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionArguments([NotNull] ZScriptParser.FunctionArgumentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgumentList([NotNull] ZScriptParser.ArgumentListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgumentList([NotNull] ZScriptParser.ArgumentListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.returnType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnType([NotNull] ZScriptParser.ReturnTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.returnType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnType([NotNull] ZScriptParser.ReturnTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.functionArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionArg([NotNull] ZScriptParser.FunctionArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.functionArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionArg([NotNull] ZScriptParser.FunctionArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.argumentName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgumentName([NotNull] ZScriptParser.ArgumentNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.argumentName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgumentName([NotNull] ZScriptParser.ArgumentNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.genericParametersDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenericParametersDefinition([NotNull] ZScriptParser.GenericParametersDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.genericParametersDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenericParametersDefinition([NotNull] ZScriptParser.GenericParametersDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.genericParameterDefinitionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenericParameterDefinitionList([NotNull] ZScriptParser.GenericParameterDefinitionListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.genericParameterDefinitionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenericParameterDefinitionList([NotNull] ZScriptParser.GenericParameterDefinitionListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.genericConstraintList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenericConstraintList([NotNull] ZScriptParser.GenericConstraintListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.genericConstraintList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenericConstraintList([NotNull] ZScriptParser.GenericConstraintListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.genericConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenericConstraint([NotNull] ZScriptParser.GenericConstraintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.genericConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenericConstraint([NotNull] ZScriptParser.GenericConstraintContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.genericType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenericType([NotNull] ZScriptParser.GenericTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.genericType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenericType([NotNull] ZScriptParser.GenericTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.genericParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenericParameters([NotNull] ZScriptParser.GenericParametersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.genericParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenericParameters([NotNull] ZScriptParser.GenericParametersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.genericParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenericParameterList([NotNull] ZScriptParser.GenericParameterListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.genericParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenericParameterList([NotNull] ZScriptParser.GenericParameterListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.typeAlias"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeAlias([NotNull] ZScriptParser.TypeAliasContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.typeAlias"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeAlias([NotNull] ZScriptParser.TypeAliasContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.typeAliasBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeAliasBody([NotNull] ZScriptParser.TypeAliasBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.typeAliasBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeAliasBody([NotNull] ZScriptParser.TypeAliasBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.typeAliasVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeAliasVariable([NotNull] ZScriptParser.TypeAliasVariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.typeAliasVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeAliasVariable([NotNull] ZScriptParser.TypeAliasVariableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.typeAliasFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeAliasFunction([NotNull] ZScriptParser.TypeAliasFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.typeAliasFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeAliasFunction([NotNull] ZScriptParser.TypeAliasFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.typeAliasName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeAliasName([NotNull] ZScriptParser.TypeAliasNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.typeAliasName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeAliasName([NotNull] ZScriptParser.TypeAliasNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.typeAliasInherit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeAliasInherit([NotNull] ZScriptParser.TypeAliasInheritContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.typeAliasInherit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeAliasInherit([NotNull] ZScriptParser.TypeAliasInheritContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] ZScriptParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] ZScriptParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.blockStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockStatement([NotNull] ZScriptParser.BlockStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.blockStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockStatement([NotNull] ZScriptParser.BlockStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStatement([NotNull] ZScriptParser.IfStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStatement([NotNull] ZScriptParser.IfStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.elseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseStatement([NotNull] ZScriptParser.ElseStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.elseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseStatement([NotNull] ZScriptParser.ElseStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.switchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchStatement([NotNull] ZScriptParser.SwitchStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.switchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchStatement([NotNull] ZScriptParser.SwitchStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.switchBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchBlock([NotNull] ZScriptParser.SwitchBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.switchBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchBlock([NotNull] ZScriptParser.SwitchBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.caseBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaseBlock([NotNull] ZScriptParser.CaseBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.caseBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaseBlock([NotNull] ZScriptParser.CaseBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.defaultBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefaultBlock([NotNull] ZScriptParser.DefaultBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.defaultBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefaultBlock([NotNull] ZScriptParser.DefaultBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStatement([NotNull] ZScriptParser.WhileStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStatement([NotNull] ZScriptParser.WhileStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForStatement([NotNull] ZScriptParser.ForStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForStatement([NotNull] ZScriptParser.ForStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.forInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForInit([NotNull] ZScriptParser.ForInitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.forInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForInit([NotNull] ZScriptParser.ForInitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.forCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForCondition([NotNull] ZScriptParser.ForConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.forCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForCondition([NotNull] ZScriptParser.ForConditionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.forIncrement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForIncrement([NotNull] ZScriptParser.ForIncrementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.forIncrement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForIncrement([NotNull] ZScriptParser.ForIncrementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStatement([NotNull] ZScriptParser.ReturnStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStatement([NotNull] ZScriptParser.ReturnStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.breakStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreakStatement([NotNull] ZScriptParser.BreakStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.breakStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreakStatement([NotNull] ZScriptParser.BreakStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.continueStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterContinueStatement([NotNull] ZScriptParser.ContinueStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.continueStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitContinueStatement([NotNull] ZScriptParser.ContinueStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.valueDeclareStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValueDeclareStatement([NotNull] ZScriptParser.ValueDeclareStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.valueDeclareStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValueDeclareStatement([NotNull] ZScriptParser.ValueDeclareStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.valueHolderDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValueHolderDecl([NotNull] ZScriptParser.ValueHolderDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.valueHolderDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValueHolderDecl([NotNull] ZScriptParser.ValueHolderDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.valueHolderDefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValueHolderDefine([NotNull] ZScriptParser.ValueHolderDefineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.valueHolderDefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValueHolderDefine([NotNull] ZScriptParser.ValueHolderDefineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.valueHolderName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValueHolderName([NotNull] ZScriptParser.ValueHolderNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.valueHolderName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValueHolderName([NotNull] ZScriptParser.ValueHolderNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] ZScriptParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] ZScriptParser.TypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.objectType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObjectType([NotNull] ZScriptParser.ObjectTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.objectType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObjectType([NotNull] ZScriptParser.ObjectTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeName([NotNull] ZScriptParser.TypeNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeName([NotNull] ZScriptParser.TypeNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.complexTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComplexTypeName([NotNull] ZScriptParser.ComplexTypeNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.complexTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComplexTypeName([NotNull] ZScriptParser.ComplexTypeNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.primitiveType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveType([NotNull] ZScriptParser.PrimitiveTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.primitiveType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveType([NotNull] ZScriptParser.PrimitiveTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.callableType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCallableType([NotNull] ZScriptParser.CallableTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.callableType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCallableType([NotNull] ZScriptParser.CallableTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.listType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterListType([NotNull] ZScriptParser.ListTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.listType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitListType([NotNull] ZScriptParser.ListTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.dictionaryType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDictionaryType([NotNull] ZScriptParser.DictionaryTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.dictionaryType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDictionaryType([NotNull] ZScriptParser.DictionaryTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.callableTypeList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCallableTypeList([NotNull] ZScriptParser.CallableTypeListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.callableTypeList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCallableTypeList([NotNull] ZScriptParser.CallableTypeListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.callableArgType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCallableArgType([NotNull] ZScriptParser.CallableArgTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.callableArgType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCallableArgType([NotNull] ZScriptParser.CallableArgTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] ZScriptParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] ZScriptParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.multOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultOp([NotNull] ZScriptParser.MultOpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.multOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultOp([NotNull] ZScriptParser.MultOpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.additionOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditionOp([NotNull] ZScriptParser.AdditionOpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.additionOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditionOp([NotNull] ZScriptParser.AdditionOpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.bitwiseShift"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBitwiseShift([NotNull] ZScriptParser.BitwiseShiftContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.bitwiseShift"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBitwiseShift([NotNull] ZScriptParser.BitwiseShiftContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.bitwiseAndOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBitwiseAndOp([NotNull] ZScriptParser.BitwiseAndOpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.bitwiseAndOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBitwiseAndOp([NotNull] ZScriptParser.BitwiseAndOpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.bitwiseXOrOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBitwiseXOrOp([NotNull] ZScriptParser.BitwiseXOrOpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.bitwiseXOrOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBitwiseXOrOp([NotNull] ZScriptParser.BitwiseXOrOpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.bitwiseOrOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBitwiseOrOp([NotNull] ZScriptParser.BitwiseOrOpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.bitwiseOrOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBitwiseOrOp([NotNull] ZScriptParser.BitwiseOrOpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.relationalOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationalOp([NotNull] ZScriptParser.RelationalOpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.relationalOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationalOp([NotNull] ZScriptParser.RelationalOpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.equalityOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEqualityOp([NotNull] ZScriptParser.EqualityOpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.equalityOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEqualityOp([NotNull] ZScriptParser.EqualityOpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.logicalAnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalAnd([NotNull] ZScriptParser.LogicalAndContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.logicalAnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalAnd([NotNull] ZScriptParser.LogicalAndContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.logicalOr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalOr([NotNull] ZScriptParser.LogicalOrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.logicalOr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalOr([NotNull] ZScriptParser.LogicalOrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.assignmentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentExpression([NotNull] ZScriptParser.AssignmentExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.assignmentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentExpression([NotNull] ZScriptParser.AssignmentExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.newExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNewExpression([NotNull] ZScriptParser.NewExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.newExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNewExpression([NotNull] ZScriptParser.NewExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.closureExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClosureExpression([NotNull] ZScriptParser.ClosureExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.closureExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClosureExpression([NotNull] ZScriptParser.ClosureExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.prefixOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrefixOperator([NotNull] ZScriptParser.PrefixOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.prefixOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrefixOperator([NotNull] ZScriptParser.PrefixOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.postfixOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPostfixOperator([NotNull] ZScriptParser.PostfixOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.postfixOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPostfixOperator([NotNull] ZScriptParser.PostfixOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.unaryOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryOperator([NotNull] ZScriptParser.UnaryOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.unaryOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryOperator([NotNull] ZScriptParser.UnaryOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.assignmentOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentOperator([NotNull] ZScriptParser.AssignmentOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.assignmentOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentOperator([NotNull] ZScriptParser.AssignmentOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.funcCallArguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncCallArguments([NotNull] ZScriptParser.FuncCallArgumentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.funcCallArguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncCallArguments([NotNull] ZScriptParser.FuncCallArgumentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionList([NotNull] ZScriptParser.ExpressionListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionList([NotNull] ZScriptParser.ExpressionListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.leftValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLeftValue([NotNull] ZScriptParser.LeftValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.leftValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLeftValue([NotNull] ZScriptParser.LeftValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.leftValueAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLeftValueAccess([NotNull] ZScriptParser.LeftValueAccessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.leftValueAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLeftValueAccess([NotNull] ZScriptParser.LeftValueAccessContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCall([NotNull] ZScriptParser.FunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCall([NotNull] ZScriptParser.FunctionCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.fieldAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFieldAccess([NotNull] ZScriptParser.FieldAccessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.fieldAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFieldAccess([NotNull] ZScriptParser.FieldAccessContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.arrayAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayAccess([NotNull] ZScriptParser.ArrayAccessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.arrayAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayAccess([NotNull] ZScriptParser.ArrayAccessContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.objectAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObjectAccess([NotNull] ZScriptParser.ObjectAccessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.objectAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObjectAccess([NotNull] ZScriptParser.ObjectAccessContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.valueAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValueAccess([NotNull] ZScriptParser.ValueAccessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.valueAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValueAccess([NotNull] ZScriptParser.ValueAccessContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.memberName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberName([NotNull] ZScriptParser.MemberNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.memberName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberName([NotNull] ZScriptParser.MemberNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.arrayLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayLiteral([NotNull] ZScriptParser.ArrayLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.arrayLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayLiteral([NotNull] ZScriptParser.ArrayLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.dictionaryLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDictionaryLiteral([NotNull] ZScriptParser.DictionaryLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.dictionaryLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDictionaryLiteral([NotNull] ZScriptParser.DictionaryLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.objectLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObjectLiteral([NotNull] ZScriptParser.ObjectLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.objectLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObjectLiteral([NotNull] ZScriptParser.ObjectLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.stringLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringLiteral([NotNull] ZScriptParser.StringLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.stringLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringLiteral([NotNull] ZScriptParser.StringLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.dictionaryEntryList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDictionaryEntryList([NotNull] ZScriptParser.DictionaryEntryListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.dictionaryEntryList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDictionaryEntryList([NotNull] ZScriptParser.DictionaryEntryListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.dictionaryEntry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDictionaryEntry([NotNull] ZScriptParser.DictionaryEntryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.dictionaryEntry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDictionaryEntry([NotNull] ZScriptParser.DictionaryEntryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.arrayLiteralInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayLiteralInit([NotNull] ZScriptParser.ArrayLiteralInitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.arrayLiteralInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayLiteralInit([NotNull] ZScriptParser.ArrayLiteralInitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.dictionaryLiteralInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDictionaryLiteralInit([NotNull] ZScriptParser.DictionaryLiteralInitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.dictionaryLiteralInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDictionaryLiteralInit([NotNull] ZScriptParser.DictionaryLiteralInitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.objectEntryList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObjectEntryList([NotNull] ZScriptParser.ObjectEntryListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.objectEntryList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObjectEntryList([NotNull] ZScriptParser.ObjectEntryListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.objectEntryDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObjectEntryDefinition([NotNull] ZScriptParser.ObjectEntryDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.objectEntryDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObjectEntryDefinition([NotNull] ZScriptParser.ObjectEntryDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.entryName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEntryName([NotNull] ZScriptParser.EntryNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.entryName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEntryName([NotNull] ZScriptParser.EntryNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.compileConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompileConstant([NotNull] ZScriptParser.CompileConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.compileConstant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompileConstant([NotNull] ZScriptParser.CompileConstantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.constantAtom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstantAtom([NotNull] ZScriptParser.ConstantAtomContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.constantAtom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstantAtom([NotNull] ZScriptParser.ConstantAtomContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.numericAtom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumericAtom([NotNull] ZScriptParser.NumericAtomContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.numericAtom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumericAtom([NotNull] ZScriptParser.NumericAtomContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.hexadecimalNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHexadecimalNumber([NotNull] ZScriptParser.HexadecimalNumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.hexadecimalNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHexadecimalNumber([NotNull] ZScriptParser.HexadecimalNumberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ZScriptParser.binaryNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinaryNumber([NotNull] ZScriptParser.BinaryNumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ZScriptParser.binaryNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinaryNumber([NotNull] ZScriptParser.BinaryNumberContext context);
}
